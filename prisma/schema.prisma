generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Organization {
  id          Int       @id @default(autoincrement())
  name        String
  type        OrganizationType
  email       String    @unique
  logoUrl     String?

  users       User[]
  invitations Invitation[]
  favoriteStudents User[]    @relation("FavoriteStudents")


  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model User {
  id              Int       @id @default(autoincrement())
  email           String    @unique
  passwordHash    String
  avatarUrl       String?
  aboutMe         String?
  telegramLink    String?     
  vkLink          String?     

  role            Role
  organization    Organization? @relation(fields: [organizationId], references: [id])
  organizationId  Int?

  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  refreshToken   String?
  studentProfile StudentProfile? @relation
  favoredBy       Organization[] @relation("FavoriteStudents")
}

model Invitation {
  id              Int       @id @default(autoincrement())
  email           String
  token           String    @unique
  role            Role
  organization    Organization @relation(fields: [organizationId], references: [id])
  organizationId  Int

  used            Boolean   @default(false)
  expiresAt       DateTime

  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
}

model StudentProfile {
  id            Int       @id @default(autoincrement())
  userId        Int       @unique
  resume        String?
  githubLink    String?
  projects      Json?

  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  user          User      @relation(fields: [userId], references: [id])
}

enum OrganizationType {
  COMPANY
  UNIVERSITY
}

enum Role {
  ADMIN
  STAFF
  STUDENT
}
